--- 
wordpress_id: 2224
layout: post
title: !binary |
  5LiJ5YCL5pyI55qE6ZaL55m85pyf6K6K5oiQ5YWp5aSp77yM5L2g5pyD5oCO
  6bq85YGa77yf77yI5LiA5Lqb5o6n566h5bCI5qGI5pmC56iL55qE5oqA5ben
  77yJ

date: 2011-04-30 17:38:37 +08:00
wordpress_url: http://blog.xdite.net/?p=2224
---
這幾天放長假。比較有空寫一點有的沒的，來分享一下我是怎麼管控專案的。（雖然很多人對我的印象是專案完成速度快是因為熟 Rails，但是其實那只是障眼法 ...XD）

前文「<a href="http://blog.xdite.net/?p=2153">如何「一天生出一個小孩」- 「我是專家」背後的故事</a>」，不少人看了會很莫名奇妙，不知道我在寫什麼。

事實上這只是一個小 demo，主要目的是說明：不一定要像我們這些熟手很會寫程式，把流程管控好，專案一樣可以很快完成。

怎麼快速推出產品，我以 Hack Day demo 為例，羅列出一些 Tips：

如果一個產品從三個月開發期，變成只有兩天時間可以做，你會採取什麼作法？

<blockquote>1. Freeze Requirement。只做重要的 feature，把最重要最難做但最基礎的架構放到最前，把 nice to have 的 feature 放到最後。totally unnecessary 完全刪掉。

2. 完全捨棄瀑布式開發，跑精簡版的 Scrum。把所有工作拆成簡短的 Story，平行分配，每個成員每完成一個 Story，就進行 interaction。

3. 幹掉所有冗長而無法決定的議題，如果一個問題無法達到最佳答案，但有個還差強人意的答案，那麼就選這個。
    重點是，不能讓任何一個人、任何一個議題擋住現有的進度。

4. 把完工日先訂出來，從完工日期間倒數開始跑，一個產品要上線，你需要完成哪些事情？是可以平行作，還是有相依性？
    以這個例子來說：
    (10) 寫投影片
      (9) 使用者測試
      (8) 全面的 Feature 完工
      (7) Apply theme
      (6) .....

    所有時程抓 *1.5 ，閃掉樂觀盲點。排完發現時間不夠用。開始計算是否可以把某些工作直接從政策上砍掉，或者把工作從絕對相依調整成可平行處理。 

5. 隊長要隨時注意團隊成員之間有沒有互相 block 的情形，有的話就要馬上去把這個石頭搬走，不管是從技術上幫忙解 bug，或者是政策上馬上做出決定。

</blockquote>

熟手的基礎技巧與協作能力甚至使用的工具，那都只是加分，不是絕對條件...

====

如果你還有興趣的話，我可以 explain 為何要這樣做：

<blockquote>(1) 很多人都把「專案延遲」當成是理所當然。事實上這不是一個正常的現象，因為花的錢不是你的，所以不會痛。或者這錢是你的，但是你覺得現在還不會痛。才會輕忽這種損失。

(2) 因為「還有大把時間」，多數人會把最黃金的大段時間，拿來「慢慢規劃」。而不是「把產品做出來」、再反覆「逼近 high quality」。

(3) 很多「完善規劃出來」的 feature，說穿了真正丟上戰場，<strong>都是「垃圾」</strong>！使用者可以接受一個沒有太花俏的東西，但滿足需求，而且細節經過回饋改善之後，都做到最好。他們不需要一個經過完美規劃製作出的大型精美的垃圾。

（而且這種垃圾通常表面上看起來很精美，實際上因為開發時間用完了，feature 卻沒寫完， bug 也一堆，上線之後再因為這種原因，被罵的很慘。導致兩種更慘的結果：RD 被罵到不爽不幹了不想改進。或者企劃以「使用者都不理智只會亂罵」完全不理解規劃苦心的理由拒絕認錯與改善...）

(4) 很多人都以為只有 RD 有「時間估算過於樂觀」的盲點。但事實上不管是企劃、美術、專案中的任何一個人....通通都有。所以估算時間一定要乘以 1.5 以上。

(5) 對實作細節的本質了解越缺乏的人，品質、feature、開發速度都會離事實越遠。所以別把時間浪費在等這種人的決定和建議上...

(6) Nice to have 的 feature 永遠可以放著晚點作，而且通常放一兩週你就會發現它變成 totally unnecessary 了。這時候就可以砍掉了。如果還是很需要，就可以轉成 must have。

(7) 很多人對於 Captain /  Manager 這個角色本質有誤解。雖然大多數人的職業生涯中，當 Manager 是因為你技術最厲害才能當。但事實上當 Captain / Manager 最重要的事情，不是埋頭單幹當前鋒，是把全局掌握清楚、當大家的 backup、讓大家能把能力發揮到最大（甚至有時候還要當 Coach）。而不是只「出一張嘴指揮」、「負責把工作扔出去」就算了...

(8) 前期的完美心態和後期的完美心態是兩回事。放棄追求前期的完美心態不會害你砸鍋，死抱著才會。後期的則完全相反。

(9) 計畫趕不上變化，每個 milestone 最重要的事情都不一樣。甚至隨著時間消逝，原本預期重要的事在這個時間點可能就不重要了，要勇於更改甚至砍掉。照著原先的計畫可能只是白白送死...

(10) <strong><strong>on time deliver product is everything，</strong>其餘的事情都不重要</strong>。

</blockquote>

